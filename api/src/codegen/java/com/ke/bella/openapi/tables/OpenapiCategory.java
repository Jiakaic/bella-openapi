/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.openapi.tables;


import com.ke.bella.openapi.DefaultSchema;
import com.ke.bella.openapi.Indexes;
import com.ke.bella.openapi.Keys;
import com.ke.bella.openapi.tables.records.OpenapiCategoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * openapi类目
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OpenapiCategory extends TableImpl<OpenapiCategoryRecord> {

    private static final long serialVersionUID = 1539184160;

    /**
     * The reference instance of <code>openapi_category</code>
     */
    public static final OpenapiCategory OPENAPI_CATEGORY = new OpenapiCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OpenapiCategoryRecord> getRecordType() {
        return OpenapiCategoryRecord.class;
    }

    /**
     * The column <code>openapi_category.id</code>. 主键ID
     */
    public final TableField<OpenapiCategoryRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "主键ID");

    /**
     * The column <code>openapi_category.category_code</code>. 类目编码
     */
    public final TableField<OpenapiCategoryRecord, String> CATEGORY_CODE = createField("category_code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "类目编码");

    /**
     * The column <code>openapi_category.category_name</code>. 类目名
     */
    public final TableField<OpenapiCategoryRecord, String> CATEGORY_NAME = createField("category_name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "类目名");

    /**
     * The column <code>openapi_category.parent_code</code>. 父类目编码
     */
    public final TableField<OpenapiCategoryRecord, String> PARENT_CODE = createField("parent_code", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "父类目编码");

    /**
     * The column <code>openapi_category.status</code>. 状态(active/inactive)
     */
    public final TableField<OpenapiCategoryRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false).defaultValue(org.jooq.impl.DSL.inline("active", org.jooq.impl.SQLDataType.VARCHAR)), this, "状态(active/inactive)");

    /**
     * The column <code>openapi_category.cuid</code>. 创建人id
     */
    public final TableField<OpenapiCategoryRecord, Long> CUID = createField("cuid", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "创建人id");

    /**
     * The column <code>openapi_category.cu_name</code>. 创建人姓名
     */
    public final TableField<OpenapiCategoryRecord, String> CU_NAME = createField("cu_name", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "创建人姓名");

    /**
     * The column <code>openapi_category.muid</code>. 编辑人id
     */
    public final TableField<OpenapiCategoryRecord, Long> MUID = createField("muid", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "编辑人id");

    /**
     * The column <code>openapi_category.mu_name</code>. 编辑人姓名
     */
    public final TableField<OpenapiCategoryRecord, String> MU_NAME = createField("mu_name", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "编辑人姓名");

    /**
     * The column <code>openapi_category.ctime</code>.
     */
    public final TableField<OpenapiCategoryRecord, Timestamp> CTIME = createField("ctime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>openapi_category.mtime</code>.
     */
    public final TableField<OpenapiCategoryRecord, Timestamp> MTIME = createField("mtime", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>openapi_category</code> table reference
     */
    public OpenapiCategory() {
        this(DSL.name("openapi_category"), null);
    }

    /**
     * Create an aliased <code>openapi_category</code> table reference
     */
    public OpenapiCategory(String alias) {
        this(DSL.name(alias), OPENAPI_CATEGORY);
    }

    /**
     * Create an aliased <code>openapi_category</code> table reference
     */
    public OpenapiCategory(Name alias) {
        this(alias, OPENAPI_CATEGORY);
    }

    private OpenapiCategory(Name alias, Table<OpenapiCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private OpenapiCategory(Name alias, Table<OpenapiCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("openapi类目"));
    }

    public <O extends Record> OpenapiCategory(Table<O> child, ForeignKey<O, OpenapiCategoryRecord> key) {
        super(child, key, OPENAPI_CATEGORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.OPENAPI_CATEGORY_IDX_PARENT_CODE, Indexes.OPENAPI_CATEGORY_PRIMARY, Indexes.OPENAPI_CATEGORY_UNIQ_IDX_UNI_CATEGORY_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OpenapiCategoryRecord, Long> getIdentity() {
        return Keys.IDENTITY_OPENAPI_CATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OpenapiCategoryRecord> getPrimaryKey() {
        return Keys.KEY_OPENAPI_CATEGORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OpenapiCategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<OpenapiCategoryRecord>>asList(Keys.KEY_OPENAPI_CATEGORY_PRIMARY, Keys.KEY_OPENAPI_CATEGORY_UNIQ_IDX_UNI_CATEGORY_NAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OpenapiCategory as(String alias) {
        return new OpenapiCategory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OpenapiCategory as(Name alias) {
        return new OpenapiCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OpenapiCategory rename(String name) {
        return new OpenapiCategory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OpenapiCategory rename(Name name) {
        return new OpenapiCategory(name, null);
    }
}
