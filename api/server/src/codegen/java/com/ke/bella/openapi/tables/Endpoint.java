/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.openapi.tables;


import com.ke.bella.openapi.DefaultSchema;
import com.ke.bella.openapi.Indexes;
import com.ke.bella.openapi.Keys;
import com.ke.bella.openapi.tables.records.EndpointRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row14;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 能力点
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Endpoint extends TableImpl<EndpointRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>endpoint</code>
     */
    public static final Endpoint ENDPOINT = new Endpoint();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EndpointRecord> getRecordType() {
        return EndpointRecord.class;
    }

    /**
     * The column <code>endpoint.id</code>. 主键ID
     */
    public final TableField<EndpointRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "主键ID");

    /**
     * The column <code>endpoint.endpoint</code>. 请求path
     */
    public final TableField<EndpointRecord, String> ENDPOINT_ = createField(DSL.name("endpoint"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "请求path");

    /**
     * The column <code>endpoint.endpoint_code</code>. 能力点编码
     */
    public final TableField<EndpointRecord, String> ENDPOINT_CODE = createField(DSL.name("endpoint_code"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "能力点编码");

    /**
     * The column <code>endpoint.endpoint_name</code>. 能力点名称
     */
    public final TableField<EndpointRecord, String> ENDPOINT_NAME = createField(DSL.name("endpoint_name"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "能力点名称");

    /**
     * The column <code>endpoint.maintainer_code</code>. 维护人ucid
     */
    public final TableField<EndpointRecord, String> MAINTAINER_CODE = createField(DSL.name("maintainer_code"), SQLDataType.VARCHAR(16).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "维护人ucid");

    /**
     * The column <code>endpoint.maintainer_name</code>. 维护人姓名
     */
    public final TableField<EndpointRecord, String> MAINTAINER_NAME = createField(DSL.name("maintainer_name"), SQLDataType.VARCHAR(16).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "维护人姓名");

    /**
     * The column <code>endpoint.status</code>. 状态(active/inactive)
     */
    public final TableField<EndpointRecord, String> STATUS = createField(DSL.name("status"), SQLDataType.VARCHAR(64).nullable(false).defaultValue(DSL.inline("active", SQLDataType.VARCHAR)), this, "状态(active/inactive)");

    /**
     * The column <code>endpoint.cuid</code>. 创建人id
     */
    public final TableField<EndpointRecord, Long> CUID = createField(DSL.name("cuid"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "创建人id");

    /**
     * The column <code>endpoint.cu_name</code>. 创建人姓名
     */
    public final TableField<EndpointRecord, String> CU_NAME = createField(DSL.name("cu_name"), SQLDataType.VARCHAR(16).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "创建人姓名");

    /**
     * The column <code>endpoint.muid</code>. 编辑人id
     */
    public final TableField<EndpointRecord, Long> MUID = createField(DSL.name("muid"), SQLDataType.BIGINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BIGINT)), this, "编辑人id");

    /**
     * The column <code>endpoint.mu_name</code>. 编辑人姓名
     */
    public final TableField<EndpointRecord, String> MU_NAME = createField(DSL.name("mu_name"), SQLDataType.VARCHAR(16).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "编辑人姓名");

    /**
     * The column <code>endpoint.ctime</code>.
     */
    public final TableField<EndpointRecord, LocalDateTime> CTIME = createField(DSL.name("ctime"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>endpoint.mtime</code>.
     */
    public final TableField<EndpointRecord, LocalDateTime> MTIME = createField(DSL.name("mtime"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>endpoint.document_url</code>. 文档地址
     */
    public final TableField<EndpointRecord, String> DOCUMENT_URL = createField(DSL.name("document_url"), SQLDataType.VARCHAR(255).nullable(false).defaultValue(DSL.inline("", SQLDataType.VARCHAR)), this, "文档地址");

    private Endpoint(Name alias, Table<EndpointRecord> aliased) {
        this(alias, aliased, null);
    }

    private Endpoint(Name alias, Table<EndpointRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("能力点"), TableOptions.table());
    }

    /**
     * Create an aliased <code>endpoint</code> table reference
     */
    public Endpoint(String alias) {
        this(DSL.name(alias), ENDPOINT);
    }

    /**
     * Create an aliased <code>endpoint</code> table reference
     */
    public Endpoint(Name alias) {
        this(alias, ENDPOINT);
    }

    /**
     * Create a <code>endpoint</code> table reference
     */
    public Endpoint() {
        this(DSL.name("endpoint"), null);
    }

    public <O extends Record> Endpoint(Table<O> child, ForeignKey<O, EndpointRecord> key) {
        super(child, key, ENDPOINT);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENDPOINT_UNIQ_IDX_UNI_ENDPOINT_NAME);
    }

    @Override
    public Identity<EndpointRecord, Long> getIdentity() {
        return (Identity<EndpointRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<EndpointRecord> getPrimaryKey() {
        return Keys.KEY_ENDPOINT_PRIMARY;
    }

    @Override
    public List<UniqueKey<EndpointRecord>> getKeys() {
        return Arrays.<UniqueKey<EndpointRecord>>asList(Keys.KEY_ENDPOINT_PRIMARY, Keys.KEY_ENDPOINT_UNIQ_IDX_UNI_ENDPOINT, Keys.KEY_ENDPOINT_UNIQ_IDX_UNI_ENDPOINT_CODE);
    }

    @Override
    public Endpoint as(String alias) {
        return new Endpoint(DSL.name(alias), this);
    }

    @Override
    public Endpoint as(Name alias) {
        return new Endpoint(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Endpoint rename(String name) {
        return new Endpoint(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Endpoint rename(Name name) {
        return new Endpoint(name, null);
    }

    // -------------------------------------------------------------------------
    // Row14 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row14<Long, String, String, String, String, String, String, Long, String, Long, String, LocalDateTime, LocalDateTime, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }
}
