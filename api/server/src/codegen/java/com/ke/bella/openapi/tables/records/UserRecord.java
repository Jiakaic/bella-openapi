/*
 * This file is generated by jOOQ.
 */
package com.ke.bella.openapi.tables.records;


import com.ke.bella.openapi.db.repo.Timed;
import com.ke.bella.openapi.tables.User;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 用户表
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Timed, Record9<Long, String, String, String, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>user.id</code>. 用户ID
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>user.id</code>. 用户ID
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>user.user_name</code>. 用户名
     */
    public void setUserName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>user.user_name</code>. 用户名
     */
    public String getUserName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>user.email</code>. 邮箱
     */
    public void setEmail(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>user.email</code>. 邮箱
     */
    public String getEmail() {
        return (String) get(2);
    }

    /**
     * Setter for <code>user.source</code>. 用户来源
     */
    public void setSource(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>user.source</code>. 用户来源
     */
    public String getSource() {
        return (String) get(3);
    }

    /**
     * Setter for <code>user.source_id</code>. 来源ID
     */
    public void setSourceId(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>user.source_id</code>. 来源ID
     */
    public String getSourceId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>user.manager_ak</code>. 管理员ak-code
     */
    public void setManagerAk(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>user.manager_ak</code>. 管理员ak-code
     */
    public String getManagerAk() {
        return (String) get(5);
    }

    /**
     * Setter for <code>user.optional_info</code>. 扩展信息
     */
    public void setOptionalInfo(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>user.optional_info</code>. 扩展信息
     */
    public String getOptionalInfo() {
        return (String) get(6);
    }

    /**
     * Setter for <code>user.ctime</code>. 创建时间
     */
    public void setCtime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>user.ctime</code>. 创建时间
     */
    public LocalDateTime getCtime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>user.mtime</code>. 最后一次更新时间
     */
    public void setMtime(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>user.mtime</code>. 最后一次更新时间
     */
    public LocalDateTime getMtime() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, String, String, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, String, String, String, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.USER_NAME;
    }

    @Override
    public Field<String> field3() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field4() {
        return User.USER.SOURCE;
    }

    @Override
    public Field<String> field5() {
        return User.USER.SOURCE_ID;
    }

    @Override
    public Field<String> field6() {
        return User.USER.MANAGER_AK;
    }

    @Override
    public Field<String> field7() {
        return User.USER.OPTIONAL_INFO;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return User.USER.CTIME;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return User.USER.MTIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUserName();
    }

    @Override
    public String component3() {
        return getEmail();
    }

    @Override
    public String component4() {
        return getSource();
    }

    @Override
    public String component5() {
        return getSourceId();
    }

    @Override
    public String component6() {
        return getManagerAk();
    }

    @Override
    public String component7() {
        return getOptionalInfo();
    }

    @Override
    public LocalDateTime component8() {
        return getCtime();
    }

    @Override
    public LocalDateTime component9() {
        return getMtime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUserName();
    }

    @Override
    public String value3() {
        return getEmail();
    }

    @Override
    public String value4() {
        return getSource();
    }

    @Override
    public String value5() {
        return getSourceId();
    }

    @Override
    public String value6() {
        return getManagerAk();
    }

    @Override
    public String value7() {
        return getOptionalInfo();
    }

    @Override
    public LocalDateTime value8() {
        return getCtime();
    }

    @Override
    public LocalDateTime value9() {
        return getMtime();
    }

    @Override
    public UserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setSource(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setSourceId(value);
        return this;
    }

    @Override
    public UserRecord value6(String value) {
        setManagerAk(value);
        return this;
    }

    @Override
    public UserRecord value7(String value) {
        setOptionalInfo(value);
        return this;
    }

    @Override
    public UserRecord value8(LocalDateTime value) {
        setCtime(value);
        return this;
    }

    @Override
    public UserRecord value9(LocalDateTime value) {
        setMtime(value);
        return this;
    }

    @Override
    public UserRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, String value7, LocalDateTime value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(Long id, String userName, String email, String source, String sourceId, String managerAk, String optionalInfo, LocalDateTime ctime, LocalDateTime mtime) {
        super(User.USER);

        setId(id);
        setUserName(userName);
        setEmail(email);
        setSource(source);
        setSourceId(sourceId);
        setManagerAk(managerAk);
        setOptionalInfo(optionalInfo);
        setCtime(ctime);
        setMtime(mtime);
    }
}
